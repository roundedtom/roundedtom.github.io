{"title":"详解Matplotlib中的figure对象","markdown":{"yaml":{"title":"详解Matplotlib中的figure对象","author":"Tom","date":"2023-10-14","toc":true,"number-sections":false,"highlight-style":"atom-one","code-block-bg":true,"categories":["数据可视化"],"image":"matplotlib.png","code-fold":false,"html-math-method":"katex","jupyter":"python3"},"headingText":"如何查看图像","containsRefs":false,"markdown":"\n\nmatplotlib 使用 `Artist` 对象处理点、线、文字、图片等图像要素在绘图区域上展现的细节问题。`Artist` 对象可以分为两种类型：一是基础对象，包括点、线、文字、图片等要素；二是容器对象，包括画布、坐标轴、坐标系等。其中，画布 `Figure` 是最基础的容器对象，是容纳其他一切 `Artist` 对象的基础。\n\n\nmatplotlib 支持通过使用 `%matplotlib <backend>` 魔法指令来指定渲染图形的后端。Jupyter 默认的后端是 `%matplotlib inline` ，在渲染图像时会默认调整图像尺寸以获得最佳的显示效果（have a tight box around Artists added to the Figure）。\n\nVScode-jupyter 支持 `%matplotlib inline` 和 `%matplotlib widget`，后者会生成一个 ipywidget，用于控制图形渲染，支持缩放等操作。\n\n此外，还有一些其他的渲染后端，比如 QtAgg 会实现一个交互式的窗口用于显示图形。\n\n下面的代码中使用 `%matplotlib widget` 生成了一个 ipywidget 控件：\n\n`%matplotlib inline` 则在代码框运行后渲染了一张静态图片并插入到输出框中：\n\n# 如何创建 Figure\n\n我们可以使用 `pyplot` 接口创建 Figure 实例。\n\n```Python\nclass matplotlib.figure.Figure(figsize=None, dpi=None, *, facecolor=None, edgecolor=None, linewidth=0.0, frameon=None, subplotpars=None, tight_layout=None, constrained_layout=None, layout=None, **kwargs)\n```\n- `figsize`：图像尺寸，默认是 [6.4, 4.8]\n- `dpi`：像素密度\n- `facecolor`：图像的背景颜色\n- `edgecolor`：图像边框的颜色\n- `linewidth`：边框宽度\n- `frameon`：默认为 True，是否渲染图像背景\n- `layout`：图像布局，默认为 None。指定布局方式可以以最佳的方式渲染图像，例如可以避免坐标轴标签、刻度等元素重叠，但会带来显著的性能开销。`tight_layout` 和 `constrained_layout` 也是关于图像布局的参数，但官方文档不推荐使用，建议使用 `layout` 参数，可选布局方式有 `constrained`，`compressed`，`tight` 等\n\n## 常用方法\n\n### `add_axes`\n\n`add_axes(rect, projection=None, polar=False, **kwargs)`：添加坐标轴，返回 `Axes` 实例\n\n- `rect`：坐标轴的尺寸（左边界、底边界、宽度、高度）。所有的数值都是相对于图形宽度和高度的分数。\n- `projection`：数据空间（data space）向屏幕空间（screen space）的映射方式\n    \n> 在绘图中，数据通常以数据坐标系表示，而图形最终要显示在屏幕上，因此需要进行坐标变换。可分离变换是一种将坐标轴单独变换的方式，例如缩放、平移等。但有些情况下，需要进行非可分离变换，例如透视变换或非线性变换，这些变换无法简单地通过分别变换坐标轴来实现。`matplotlib.projections` 模块提供了处理这些非可分离变换的工具和方法，使用户能够实现各种复杂的数据到屏幕的映射，以满足绘图需求。这对于绘制具有非标准坐标系的图形或需要特殊变换的图形非常有用。\n\n- `polar`：`polar=True` 等同于 `projection='ploar'`\n\n### `add_subplot`\n\n`add_subplot(nrows, ncols, index, **kwargs)`：添加子图坐标轴，返回 `Axes` 实例\n\n- `nrows`：子图总行数\n- `ncols`：子图总列数\n- `index`：子图位置\n- `projection`：子图坐标系变换方式\n- `sharex`，`sharey`：共享 x/y 轴，共享轴刻度、标签等坐标轴特征相同\n\n\n### `subplots`\n\n`subplots(nrows=1, ncols=1, *, sharex=False, sharey=False, squeeze=True, width_ratios=None, height_ratios=None, subplot_kw=None, gridspec_kw=None)`：以 array 形式返回 `Axes` 实例\n\n- squeeze：是否对返回的 `Axes` array 进行缩维处理。如果为 False，则 `subplots(1,1, squeeze=False)` 返回的也是一个 `Axes` array \n\n### `subplots_adjust`\n\n`subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=None, hspace=None)`：调节子图布局参数\n\n- `left`：子图左边缘位置，表示为图片宽度的比例\n- `right`：子图右边缘位置，表示为图片宽度的比例\n- `bottom`：子图下边缘位置，表示为图片高度的比例\n- `top`：子图上边缘位置，表示为图片高度的比例\n- `wspace`：子图间 padding 的宽度，坐标轴平均宽度的比例 \n- `hspace`：子图间 padding 的高度，坐标轴平均高度的比例\n\n### `suptitle`\n\n`suptitle(t, **kwargs)`：为 Figure 实例添加一个标题，返回 `Text` 实例\n\n- `t`：标题文字\n- `x` 和 `y`：标题坐标\n- `ha`：标题水平位置，center、left、right\n- `va`：标题垂直位置，top、center、bottom、baseline\n- `fontsize` 与 `fontweight`\n\n### `tight_layout`\n\n`tight_layout(*, pad=1.08, h_pad=None, w_pad=None, rect=None)`：调节子图之间和周围的间距，可以使得子图显示更美观\n\n- `pad`：图片边缘与子图边缘之间的 padding，以字体大小的比例表示，默认 1.08\n- `h_pad` 和 `w_pad`：相邻子图边缘之间的填充（高度/宽度），默认为 `pad` 取值\n- `rect`：tuple （left, bottom, right, top）， default: （0, 0, 1, 1）\n\n当然，也可以在创建 Figure 实例时使用 `layout` 参数： \n\n# 如何保存 Figure\n\nmatplotlib 提供了 `savefig` 方法来保存图片。 \n\n```Python\nsavefig(fname, *, dpi='figure', format=None, metadata=None,\n        bbox_inches=None, pad_inches=0.1,\n        facecolor='auto', edgecolor='auto',\n        backend=None, **kwargs\n       )\n```\n\n- `fname`：保存路径/文件名\n- `dpi`：默认 `figure` 表示使用定义 `Figure` 实例时的像素\n- `format`：默认保存为 png 格式\n- `bbox_inches`：调整保存图片的尺寸，常用 `tight`，matplotlib 会尝试确定图形的紧凑边界框\n- `pad_inches`：当 `bbox_inches` 设置为 `tight` 时，围绕图形的边缘的填充量，以英寸为单位\n\n# 参考资料\n\n- https://matplotlib.org/stable/users/explain/figure/figure_intro.html#introduction-to-figures  \n- https://stackoverflow.com/questions/43326680/what-are-the-differences-between-add-axes-and-add-subplot\n","srcMarkdownNoYaml":"\n\nmatplotlib 使用 `Artist` 对象处理点、线、文字、图片等图像要素在绘图区域上展现的细节问题。`Artist` 对象可以分为两种类型：一是基础对象，包括点、线、文字、图片等要素；二是容器对象，包括画布、坐标轴、坐标系等。其中，画布 `Figure` 是最基础的容器对象，是容纳其他一切 `Artist` 对象的基础。\n\n# 如何查看图像\n\nmatplotlib 支持通过使用 `%matplotlib <backend>` 魔法指令来指定渲染图形的后端。Jupyter 默认的后端是 `%matplotlib inline` ，在渲染图像时会默认调整图像尺寸以获得最佳的显示效果（have a tight box around Artists added to the Figure）。\n\nVScode-jupyter 支持 `%matplotlib inline` 和 `%matplotlib widget`，后者会生成一个 ipywidget，用于控制图形渲染，支持缩放等操作。\n\n此外，还有一些其他的渲染后端，比如 QtAgg 会实现一个交互式的窗口用于显示图形。\n\n下面的代码中使用 `%matplotlib widget` 生成了一个 ipywidget 控件：\n\n`%matplotlib inline` 则在代码框运行后渲染了一张静态图片并插入到输出框中：\n\n# 如何创建 Figure\n\n我们可以使用 `pyplot` 接口创建 Figure 实例。\n\n```Python\nclass matplotlib.figure.Figure(figsize=None, dpi=None, *, facecolor=None, edgecolor=None, linewidth=0.0, frameon=None, subplotpars=None, tight_layout=None, constrained_layout=None, layout=None, **kwargs)\n```\n- `figsize`：图像尺寸，默认是 [6.4, 4.8]\n- `dpi`：像素密度\n- `facecolor`：图像的背景颜色\n- `edgecolor`：图像边框的颜色\n- `linewidth`：边框宽度\n- `frameon`：默认为 True，是否渲染图像背景\n- `layout`：图像布局，默认为 None。指定布局方式可以以最佳的方式渲染图像，例如可以避免坐标轴标签、刻度等元素重叠，但会带来显著的性能开销。`tight_layout` 和 `constrained_layout` 也是关于图像布局的参数，但官方文档不推荐使用，建议使用 `layout` 参数，可选布局方式有 `constrained`，`compressed`，`tight` 等\n\n## 常用方法\n\n### `add_axes`\n\n`add_axes(rect, projection=None, polar=False, **kwargs)`：添加坐标轴，返回 `Axes` 实例\n\n- `rect`：坐标轴的尺寸（左边界、底边界、宽度、高度）。所有的数值都是相对于图形宽度和高度的分数。\n- `projection`：数据空间（data space）向屏幕空间（screen space）的映射方式\n    \n> 在绘图中，数据通常以数据坐标系表示，而图形最终要显示在屏幕上，因此需要进行坐标变换。可分离变换是一种将坐标轴单独变换的方式，例如缩放、平移等。但有些情况下，需要进行非可分离变换，例如透视变换或非线性变换，这些变换无法简单地通过分别变换坐标轴来实现。`matplotlib.projections` 模块提供了处理这些非可分离变换的工具和方法，使用户能够实现各种复杂的数据到屏幕的映射，以满足绘图需求。这对于绘制具有非标准坐标系的图形或需要特殊变换的图形非常有用。\n\n- `polar`：`polar=True` 等同于 `projection='ploar'`\n\n### `add_subplot`\n\n`add_subplot(nrows, ncols, index, **kwargs)`：添加子图坐标轴，返回 `Axes` 实例\n\n- `nrows`：子图总行数\n- `ncols`：子图总列数\n- `index`：子图位置\n- `projection`：子图坐标系变换方式\n- `sharex`，`sharey`：共享 x/y 轴，共享轴刻度、标签等坐标轴特征相同\n\n\n### `subplots`\n\n`subplots(nrows=1, ncols=1, *, sharex=False, sharey=False, squeeze=True, width_ratios=None, height_ratios=None, subplot_kw=None, gridspec_kw=None)`：以 array 形式返回 `Axes` 实例\n\n- squeeze：是否对返回的 `Axes` array 进行缩维处理。如果为 False，则 `subplots(1,1, squeeze=False)` 返回的也是一个 `Axes` array \n\n### `subplots_adjust`\n\n`subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=None, hspace=None)`：调节子图布局参数\n\n- `left`：子图左边缘位置，表示为图片宽度的比例\n- `right`：子图右边缘位置，表示为图片宽度的比例\n- `bottom`：子图下边缘位置，表示为图片高度的比例\n- `top`：子图上边缘位置，表示为图片高度的比例\n- `wspace`：子图间 padding 的宽度，坐标轴平均宽度的比例 \n- `hspace`：子图间 padding 的高度，坐标轴平均高度的比例\n\n### `suptitle`\n\n`suptitle(t, **kwargs)`：为 Figure 实例添加一个标题，返回 `Text` 实例\n\n- `t`：标题文字\n- `x` 和 `y`：标题坐标\n- `ha`：标题水平位置，center、left、right\n- `va`：标题垂直位置，top、center、bottom、baseline\n- `fontsize` 与 `fontweight`\n\n### `tight_layout`\n\n`tight_layout(*, pad=1.08, h_pad=None, w_pad=None, rect=None)`：调节子图之间和周围的间距，可以使得子图显示更美观\n\n- `pad`：图片边缘与子图边缘之间的 padding，以字体大小的比例表示，默认 1.08\n- `h_pad` 和 `w_pad`：相邻子图边缘之间的填充（高度/宽度），默认为 `pad` 取值\n- `rect`：tuple （left, bottom, right, top）， default: （0, 0, 1, 1）\n\n当然，也可以在创建 Figure 实例时使用 `layout` 参数： \n\n# 如何保存 Figure\n\nmatplotlib 提供了 `savefig` 方法来保存图片。 \n\n```Python\nsavefig(fname, *, dpi='figure', format=None, metadata=None,\n        bbox_inches=None, pad_inches=0.1,\n        facecolor='auto', edgecolor='auto',\n        backend=None, **kwargs\n       )\n```\n\n- `fname`：保存路径/文件名\n- `dpi`：默认 `figure` 表示使用定义 `Figure` 实例时的像素\n- `format`：默认保存为 png 格式\n- `bbox_inches`：调整保存图片的尺寸，常用 `tight`，matplotlib 会尝试确定图形的紧凑边界框\n- `pad_inches`：当 `bbox_inches` 设置为 `tight` 时，围绕图形的边缘的填充量，以英寸为单位\n\n# 参考资料\n\n- https://matplotlib.org/stable/users/explain/figure/figure_intro.html#introduction-to-figures  \n- https://stackoverflow.com/questions/43326680/what-are-the-differences-between-add-axes-and-add-subplot\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":false,"highlight-style":"atom-one","html-math-method":"katex","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.34","theme":["cosmo","../../theme.scss"],"title-block-banner":true,"title":"详解Matplotlib中的figure对象","author":"Tom","date":"2023-10-14","code-block-bg":true,"categories":["数据可视化"],"image":"matplotlib.png","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}