{"title":"Pygraphviz安装记录","markdown":{"yaml":{"title":"Pygraphviz安装记录","author":"Tom","date":"2023-11-09","toc":false,"code-block-bg":true,"highlight-style":"atom-one","categories":["机器学习","数据可视化"],"image":"pygraphviz.png","code-fold":false,"html-math-method":"katex","jupyter":"python3"},"headingText":"参考资料","containsRefs":false,"markdown":"\n\n这是一次失败的安装记录。起因是我想试一下 pybaobabdt，而 pybaobabdt 需要安装 Pygraphviz。网上大部分资料都是使用 [Christoph Gohlke](https://www.lfd.uci.edu/~gohlke/pythonlibs/) 提供的 whl 文件进行本地安装，而我的 Python 版本是 3.11，没有相应的 whl 文件，于是我打算参考官方文档使用 pip 进行安装。此刻，我还不知道这个决定意味着什么:)\n\n> 在软件开发中，\"wheel\" 是一个特定的 Python 包发布格式，通常用于 Python 包的分发和安装。Wheel 文件通常包含了已经编译好的二进制代码，以及与特定操作系统和 Python 版本兼容的相关文件，以便更快地安装 Python 包，而无需进行编译。\n>\n> Wheel 文件的主要优势在于它们可以节省时间，因为它们不需要在安装时进行编译，而是直接使用预编译的二进制代码，因此安装速度更快。这对于大型项目和依赖复杂的 Python 包非常有用，因为它们通常需要较长时间来编译。\n> Wheel 文件通常以 \".whl\" 扩展名结尾，例如 \"mypackage-1.0-py3-none-any.whl\"，其中 \"mypackage\" 是包的名称，\"1.0\" 是版本号，\"py3\" 表示兼容的 Python 版本，\"none\" 表示与操作系统无关，\"any\" 表示适用于任何操作系统。\n>\n> Python 的包管理工具 pip 支持从 wheel 文件安装 Python 包，因此开发者可以更轻松地将其包分发给其他用户，并确保兼容性和安装速度。通常，当你使用 pip 安装 Python 包时，它会首先尝试使用 wheel 文件，如果可用的话，以提高安装效率。如果没有可用的 wheel 文件，pip 将使用源代码进行安装，需要编译并构建包。   —— ChatGPT\n\n根据官方文档，在 windows 系统上安装 Pygraphviz，首先需要手动下载安装 Graphviz，并将 Graphviz 添加到环境变量。\n\n> Graphviz是一个开源的图形可视化工具，用于绘制各种类型的图形，如有向图、无向图和树。它提供了一种简单的描述图形的语言（通常是DOT语言），通过这种语言，你可以指定图形的节点、边和布局等属性。Graphviz会将这些描述转换为可视化图形。它支持多种输出格式，包括PNG、PDF、SVG等。Graphviz是一个独立的工具，不直接与Python关联。\n\n其次，需要下载安装 Visual C/C++。然后使用 pip 进行安装：\n\n```Powershell\npython -m pip install --use-pep517 `\n              --config-setting=\"--global-option=build_ext\" `\n              --config-setting=\"--global-option=\"-IC:\\ProgramFiles\\Graphviz\\include\" `\n              --config-setting=\"--global-option=\"-LC:\\ProgramFiles\\Graphviz\\lib\" `\n              pygraphviz\n```\n\n然后收获如下报错：\n\n```Powershell\npygraphviz/graphviz_wrap.c(3020): fatal error C1083: 无法打开包括文件: “graphviz/cgraph.h”: No such file or directory\n```\n\n在 `C:\\Program Files\\Graphviz\\include\\graphviz\\` 下确实可以找到 `cgraph.h` 这个文件。这个报错查阅了很多资料，都无法解决，几个小时过去了，在 Medium 上看到了一篇文章 [Trying to install pygraphviz on windows is a real pain](https://medium.com/@notokesporketokas/trying-to-install-pygraphviz-on-windows-is-a-real-pain-82502752365b)，真是说出了我的心声:( \n    \n最后无奈选择了在 WSL2 上安装。在 WSL2 Ubuntu18.04 上安装就简单多了，虽然也出现了报错：\n\n```Bash\nERROR: Could not build wheels for pygraphviz, which is required to install pyproject.toml-based projects\n```\n\n根据一篇[教程](https://bobbyhadz.com/blog/python-could-not-build-wheels-for-which-use-pep-517)也很容易就解决了:)\n\n\n- https://pygraphviz.github.io/documentation/stable/install.html\n- https://www.lfd.uci.edu/~gohlke/pythonlibs/\n- https://github.com/pygraphviz/pygraphviz/issues/155\n- https://medium.com/@notokesporketokas/trying-to-install-pygraphviz-on-windows-is-a-real-pain-82502752365b\n- https://bobbyhadz.com/blog/python-could-not-build-wheels-for-which-use-pep-517\n","srcMarkdownNoYaml":"\n\n这是一次失败的安装记录。起因是我想试一下 pybaobabdt，而 pybaobabdt 需要安装 Pygraphviz。网上大部分资料都是使用 [Christoph Gohlke](https://www.lfd.uci.edu/~gohlke/pythonlibs/) 提供的 whl 文件进行本地安装，而我的 Python 版本是 3.11，没有相应的 whl 文件，于是我打算参考官方文档使用 pip 进行安装。此刻，我还不知道这个决定意味着什么:)\n\n> 在软件开发中，\"wheel\" 是一个特定的 Python 包发布格式，通常用于 Python 包的分发和安装。Wheel 文件通常包含了已经编译好的二进制代码，以及与特定操作系统和 Python 版本兼容的相关文件，以便更快地安装 Python 包，而无需进行编译。\n>\n> Wheel 文件的主要优势在于它们可以节省时间，因为它们不需要在安装时进行编译，而是直接使用预编译的二进制代码，因此安装速度更快。这对于大型项目和依赖复杂的 Python 包非常有用，因为它们通常需要较长时间来编译。\n> Wheel 文件通常以 \".whl\" 扩展名结尾，例如 \"mypackage-1.0-py3-none-any.whl\"，其中 \"mypackage\" 是包的名称，\"1.0\" 是版本号，\"py3\" 表示兼容的 Python 版本，\"none\" 表示与操作系统无关，\"any\" 表示适用于任何操作系统。\n>\n> Python 的包管理工具 pip 支持从 wheel 文件安装 Python 包，因此开发者可以更轻松地将其包分发给其他用户，并确保兼容性和安装速度。通常，当你使用 pip 安装 Python 包时，它会首先尝试使用 wheel 文件，如果可用的话，以提高安装效率。如果没有可用的 wheel 文件，pip 将使用源代码进行安装，需要编译并构建包。   —— ChatGPT\n\n根据官方文档，在 windows 系统上安装 Pygraphviz，首先需要手动下载安装 Graphviz，并将 Graphviz 添加到环境变量。\n\n> Graphviz是一个开源的图形可视化工具，用于绘制各种类型的图形，如有向图、无向图和树。它提供了一种简单的描述图形的语言（通常是DOT语言），通过这种语言，你可以指定图形的节点、边和布局等属性。Graphviz会将这些描述转换为可视化图形。它支持多种输出格式，包括PNG、PDF、SVG等。Graphviz是一个独立的工具，不直接与Python关联。\n\n其次，需要下载安装 Visual C/C++。然后使用 pip 进行安装：\n\n```Powershell\npython -m pip install --use-pep517 `\n              --config-setting=\"--global-option=build_ext\" `\n              --config-setting=\"--global-option=\"-IC:\\ProgramFiles\\Graphviz\\include\" `\n              --config-setting=\"--global-option=\"-LC:\\ProgramFiles\\Graphviz\\lib\" `\n              pygraphviz\n```\n\n然后收获如下报错：\n\n```Powershell\npygraphviz/graphviz_wrap.c(3020): fatal error C1083: 无法打开包括文件: “graphviz/cgraph.h”: No such file or directory\n```\n\n在 `C:\\Program Files\\Graphviz\\include\\graphviz\\` 下确实可以找到 `cgraph.h` 这个文件。这个报错查阅了很多资料，都无法解决，几个小时过去了，在 Medium 上看到了一篇文章 [Trying to install pygraphviz on windows is a real pain](https://medium.com/@notokesporketokas/trying-to-install-pygraphviz-on-windows-is-a-real-pain-82502752365b)，真是说出了我的心声:( \n    \n最后无奈选择了在 WSL2 上安装。在 WSL2 Ubuntu18.04 上安装就简单多了，虽然也出现了报错：\n\n```Bash\nERROR: Could not build wheels for pygraphviz, which is required to install pyproject.toml-based projects\n```\n\n根据一篇[教程](https://bobbyhadz.com/blog/python-could-not-build-wheels-for-which-use-pep-517)也很容易就解决了:)\n\n# 参考资料\n\n- https://pygraphviz.github.io/documentation/stable/install.html\n- https://www.lfd.uci.edu/~gohlke/pythonlibs/\n- https://github.com/pygraphviz/pygraphviz/issues/155\n- https://medium.com/@notokesporketokas/trying-to-install-pygraphviz-on-windows-is-a-real-pain-82502752365b\n- https://bobbyhadz.com/blog/python-could-not-build-wheels-for-which-use-pep-517\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"highlight-style":"atom-one","html-math-method":"katex","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","theme":["cosmo","../../theme.scss"],"title-block-banner":true,"title":"Pygraphviz安装记录","author":"Tom","date":"2023-11-09","code-block-bg":true,"categories":["机器学习","数据可视化"],"image":"pygraphviz.png","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}